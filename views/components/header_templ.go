// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Header() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"container\"><!-- ロゴ --><div class=\"header-logo\"><a href=\"/\" title=\"Go to homepage\"><img src=\"/assets/images/logo.png\" alt=\"Logo\"></a><style type=\"text/css\">\n\t\t\t\t& #header .header-logo {\n\t\t\t\t\tdisplay: flex;\n\t\t\t\t\tjustify-content: center;\n\t\t\t\t\talign-items: center;\n\t\t\t\t\t& a {\n\t\t\t\t\t\t& img {\n\t\t\t\t\t\t\twidth: 64px;\n\t\t\t\t\t\t\theight: auto;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</style></div><!-- ナビゲーション --><nav class=\"header-nav\"><ul class=\"header-nav-list\"><li class=\"header-nav-item\"><a href=\"/\">Home</a></li><li class=\"header-nav-item\"><a href=\"/about\">About</a></li><li class=\"header-nav-item\"><a href=\"/contact\">Contact</a></li><li class=\"header-nav-item\"><a href=\"/qa\">Q&A</a></li></ul><style type=\"text/css\">\n\t\t\t\t& .header-nav {\n\t\t\t\t\tdisplay: none;\n\t\t\t\t\t& .header-nav-list {\n\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\tgap: 1rem;\n\t\t\t\t\t\t& a:hover {\n\t\t\t\t\t\t\tcolor: red;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</style></nav><!-- モバイル用ナビゲーション ボタン --><div class=\"burger-menu-container\" data-burger-menu-name=\"Menu\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = BurgerMenu().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<style>\n\t\t\t\t#header .burger-menu-container {\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 16px;\n\t\t\t\t\tright: 16px;\n\t\t\t\t\tmin-width: 45px;\n\t\t\t\t\tdisplay: grid;\n\t\t\t\t\tplace-items: center;\n\t\t\t\t\ttext-wrap: nowrap;\n\t\t\t\t\tz-index: 1000;\n\t\t\t\t\t&::after {\n\t\t\t\t\t\tcontent: attr(data-burger-menu-name);\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t\t\tcolor: var(--black);\n\t\t\t\t\t}\n\t\t\t\t\t&:has(.is-active) {\n\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\tcolor: var(--white);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t& .burger-menu-line {\n\t\t\t\t\t\t\tbackground-color: var(--white);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</style></div><!-- モバイル用ナビゲーション --><nav id=\"mobile-navigation\" class=\"\"><ul class=\"nav-list\"><li class=\"nav-item\"><a class=\"nav-link\" href=\"/\" data-nav-item=\"Home\"></a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"/about\" data-nav-item=\"About\"></a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"/contact\" data-nav-item=\"Contact\"></a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"/qa\" data-nav-item=\"Q&amp;A\"></a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"/signup\" data-nav-item=\"Signup\"></a></li><li class=\"nav-item\"><a class=\"nav-link\" href=\"/login\" data-nav-item=\"Login\"></a></li></ul><style type=\"text/css\">\n\t\t\t\t#mobile-navigation {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t\tposition: fixed;\n\t\t\t\t\ttop: 0;\n\t\t\t\t\tleft: -100%;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tbackground-color: hsl(from var(--primary-6) h s l / 80%);\n\t\t\t\t\ttransition: all 0.5s ease;\n\t\t\t\t\tbackdrop-filter: blur(10px);\n\t\t\t\t\t&.open {\n\t\t\t\t\t\tleft: 0;\n\t\t\t\t\t}\n\t\t\t\t\t& .nav-list {\n\t\t\t\t\t\tdisplay: grid;\n\t\t\t\t\t\tmargin-top: 80px;\n\t\t\t\t\t\t& .nav-link {\n\t\t\t\t\t\t\tdisplay: flex;\n\t\t\t\t\t\t\tjustify-content: space-between;\n\t\t\t\t\t\t\talign-items: center;\n\t\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\t\tpadding: 1rem;\n\t\t\t\t\t\t\tcolor: var(--white);\n\t\t\t\t\t\t\tborder-bottom: 1px solid var(--white);\n\t\t\t\t\t\t\t&:hover {\n\t\t\t\t\t\t\t\tbackground-color: hsl(from var(--primary-2) h s l / 50%);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t&::before {\n\t\t\t\t\t\t\t\tcontent: attr(data-nav-item);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t&::after {\n\t\t\t\t\t\t\t\tcontent: \"\";\n\t\t\t\t\t\t\t\tbackground-color: var(--white);\n\t\t\t\t\t\t\t\theight: 10px;\n\t\t\t\t\t\t\t\twidth: 10px;\n\t\t\t\t\t\t\t\tborder-radius: 50%;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t&.active::after {\n\t\t\t\t\t\t\t\tbackground-color: var(--primary-2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t</style></nav></div><style>\n\t\t#header {\n\t\t\t& .container {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: space-between;\n\t\t\t\talign-items: center;\n\t\t\t\theight: 100%;\n\t\t\t}\n\t\t}\n\t</style>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
